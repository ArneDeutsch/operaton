<?xml version="1.0" encoding="UTF-8"?>
<definitions
  xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
  xmlns:operaton="http://operaton.org/schema/1.0/bpmn"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  targetNamespace="http://operaton.org/test">

  <!-- NOTE: this document is not valid and is only used to test all operaton extensions -->

  <process id="process"
      operaton:candidateStarterGroups="group1, ${group2(a, b)}, group3"
      operaton:candidateStarterUsers="user1, ${user2(a, b)}, user3"
      operaton:jobPriority="15"
      operaton:taskPriority="13"
      operaton:historyTimeToLive="5"
      operaton:isStartableInTasklist="false"
      operaton:versionTag="v1.0.0">
    <extensionElements>
      <operaton:executionListener event="start" class="org.operaton.test.Test"/>
    </extensionElements>

    <startEvent id="startEvent"
        operaton:initiator="test"
        operaton:formHandlerClass="org.operaton.test.Test"
        operaton:formKey="test"
        operaton:asyncBefore="true"
        operaton:asyncAfter="true"
        operaton:jobPriority="${test}">
      <extensionElements>
        <operaton:executionListener event="start" expression="${test}"/>
        <operaton:potentialStarter>
          <resourceAssignmentExpression>
            <formalExpression>group1, ${group2(a, b)}, group3</formalExpression>
          </resourceAssignmentExpression>
        </operaton:potentialStarter>
        <operaton:formProperty id="test" name="test" type="test" variable="test" expression="${test}" datePattern="test" default="test"/>
      </extensionElements>
      <errorEventDefinition operaton:errorCodeVariable="errorVariable" operaton:errorMessageVariable="errorMessageVariable"/>
    </startEvent>

    <sequenceFlow id="sequenceFlow" sourceRef="startEvent" targetRef="userTask">
      <extensionElements>
        <operaton:executionListener>
          <operaton:script scriptFormat="groovy">println 'Hello World'</operaton:script>
        </operaton:executionListener>
      </extensionElements>
    </sequenceFlow>

    <userTask id="userTask"
        operaton:assignee="test"
        operaton:async="true"
        operaton:asyncBefore="true"
        operaton:asyncAfter="true"
        operaton:candidateGroups="group1, ${group2(a, b)}, group3"
        operaton:candidateUsers="user1, ${user2(a, b)}, user3"
        operaton:dueDate="2014-02-27"
        operaton:exclusive="false"
        operaton:formHandlerClass="org.operaton.test.Test"
        operaton:formKey="test"
        operaton:priority="12"
        operaton:jobPriority="${test}">
      <extensionElements>
        <operaton:taskListener event="create" class="org.operaton.test.Test" expression="${test}" delegateExpression="${org.operaton.test.Test}">
          <operaton:field name="test">
            <operaton:string>test</operaton:string>
          </operaton:field>
          <timerEventDefinition>
            <timeDuration xsi:type="tFormalExpression">PT1H</timeDuration>
          </timerEventDefinition>
        </operaton:taskListener>
        <operaton:taskListener>
          <operaton:script scriptFormat="groovy" resource="test.groovy" />
        </operaton:taskListener>
        <operaton:formData>
          <operaton:formField id="test" label="test" type="test" datePattern="test" defaultValue="test">
            <operaton:properties>
              <operaton:property id="test" value="test"/>
            </operaton:properties>
            <operaton:validation>
              <operaton:constraint name="test" config="test"/>
            </operaton:validation>
            <operaton:value id="test" name="test"/>
          </operaton:formField>
        </operaton:formData>
      </extensionElements>
    </userTask>

    <serviceTask id="serviceTask"
        operaton:expression="${test}"
        operaton:class="org.operaton.test.Test"
        operaton:delegateExpression="${org.operaton.test.Test}"
        operaton:resultVariable="test"
        operaton:type="mail"
        operaton:topic="test"
        operaton:taskPriority="${test}">
      <extensionElements>
        <operaton:executionListener event="start" delegateExpression="${org.operaton.test.Test}"/>
        <operaton:connector>
          <operaton:connectorId>soap-http-connector</operaton:connectorId>
          <operaton:inputOutput>
            <operaton:inputParameter name="endpointUrl">http://example.com/webservice</operaton:inputParameter>
            <operaton:outputParameter name="result">output</operaton:outputParameter>
          </operaton:inputOutput>
        </operaton:connector>
        <operaton:inputOutput>
          <operaton:inputParameter name="shouldBeNull"/>
          <operaton:inputParameter name="shouldBeConstant">foo</operaton:inputParameter>
          <operaton:inputParameter name="shouldBeExpression">${1 + 1}</operaton:inputParameter>
          <operaton:inputParameter name="shouldBeList">
            <operaton:list>
              <operaton:value>a</operaton:value>
              <operaton:value>b</operaton:value>
              <operaton:value>c</operaton:value>
            </operaton:list>
          </operaton:inputParameter>
          <operaton:inputParameter name="shouldBeMap">
            <operaton:map>
              <operaton:entry key="foo">bar</operaton:entry>
              <operaton:entry key="hello">world</operaton:entry>
            </operaton:map>
          </operaton:inputParameter>
          <operaton:inputParameter name="shouldBeScript">
            <operaton:script scriptFormat="groovy">1 + 1</operaton:script>
          </operaton:inputParameter>
          <operaton:outputParameter name="nested">
            <operaton:list>
              <operaton:value>
                <operaton:list>
                  <operaton:value>list</operaton:value>
                  <operaton:value>list</operaton:value>
                </operaton:list>
              </operaton:value>
              <operaton:value>
                <operaton:map>
                  <operaton:entry key="list">
                    <operaton:list>
                      <operaton:value>map</operaton:value>
                      <operaton:value>map</operaton:value>
                      <operaton:value>map</operaton:value>
                    </operaton:list>
                  </operaton:entry>
                  <operaton:entry key="map">
                    <operaton:map>
                      <operaton:entry key="so">nested</operaton:entry>
                    </operaton:map>
                  </operaton:entry>
                </operaton:map>
              </operaton:value>
            </operaton:list>
          </operaton:outputParameter>
        </operaton:inputOutput>
      </extensionElements>
    </serviceTask>

    <sendTask id="sendTask">
      <extensionElements>
        <operaton:failedJobRetryTimeCycle>test</operaton:failedJobRetryTimeCycle>
        <operaton:field name="test" stringValue="test" expression="${test}">
          <operaton:expression>${test}</operaton:expression>
          <operaton:string>test</operaton:string>
        </operaton:field>
      </extensionElements>
    </sendTask>

    <scriptTask id="scriptTask" scriptFormat="groovy" operaton:resource="test.groovy" />

    <callActivity id="callActivity"
                  operaton:calledElementBinding="test"
                  operaton:calledElementVersion="test"
                  operaton:calledElementVersionTag="test"
                  operaton:calledElementTenantId="test"
                  operaton:caseRef="test"
                  operaton:caseBinding="test"
                  operaton:caseVersion="test"
                  operaton:caseTenantId="test"
                  operaton:exclusive="false"
                  operaton:variableMappingClass="org.operaton.test.Test"
                  operaton:variableMappingDelegateExpression="${org.operaton.test.Test}">
      <extensionElements>
        <operaton:in source="test" sourceExpression="${test}" variables="test" businessKey="${test}" target="test" local="true"/>
        <operaton:out source="test" sourceExpression="${test}" variables="test" target="test" local="true"/>
      </extensionElements>
    </callActivity>

    <businessRuleTask id="businessRuleTask"
                      operaton:decisionRef="test"
                      operaton:decisionRefBinding="test"
                      operaton:decisionRefVersion="test"
                      operaton:decisionRefVersionTag="test"
                      operaton:decisionRefTenantId="test"
                      operaton:mapDecisionResult="test"
                      operaton:taskPriority="test"/>

    <endEvent id="endEvent"
              operaton:asyncAfter="true"
              operaton:asyncBefore="true"
              operaton:jobPriority="${test}">
      <extensionElements>
        <operaton:properties>
          <operaton:property name="name1" value="value1"/>
          <operaton:property name="name2" value="value2"/>
        </operaton:properties>
      </extensionElements>
      <messageEventDefinition
        operaton:class="org.operaton.test.Test"
        operaton:expression="${test}"
        operaton:delegateExpression="${org.operaton.test.Test}"
        operaton:resultVariable="test"
        operaton:topic="test"
        operaton:type="test" />
    </endEvent>

    <parallelGateway id="parallelGateway"
                     operaton:async="true"
                     operaton:asyncBefore="true"
                     operaton:asyncAfter="true"
                     operaton:jobPriority="${test}">

    </parallelGateway>
  </process>

  <error id="error" operaton:errorMessage="test" />
</definitions>
